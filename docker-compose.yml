services:
  # API Gateway con Nginx
  api-gateway:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: factumarket-api-gateway
    ports:
      - "3000:3000"
    depends_on:
      - clientes-service
      - facturas-service
    networks:
      - factumarket-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Base de datos Oracle Express
  oracle-db:
    image: container-registry.oracle.com/database/express:latest
    container_name: factumarket-oracle
    environment:
      - ORACLE_PWD=Oracle123
      - ORACLE_CHARACTERSET=AL32UTF8
    ports:
      - "1521:1521"
      - "5500:5500"  # Oracle Enterprise Manager Express
    volumes:
      - oracle_data:/opt/oracle/oradata
      - ./oracle-init:/opt/oracle/scripts/startup
    networks:
      - factumarket-network
    healthcheck:
      test: ["CMD", "sqlplus", "-L", "system/Oracle123@//localhost:1521/XE", "@/dev/null"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Base de datos MongoDB para auditoría
  mongodb:
    image: mongo:7.0
    container_name: factumarket-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
      - MONGO_INITDB_DATABASE=auditoria
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - factumarket-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Servicio de clientes
  clientes-service:
    build:
      context: ./backend/clientes-service
      dockerfile: Dockerfile.simple
    container_name: factumarket-clientes-service
    environment:
      - RAILS_ENV=development
      - ORACLE_HOST=oracle-db
      - ORACLE_PORT=1521
      - ORACLE_SERVICE_NAME=XEPDB1
      - ORACLE_USERNAME=clientes_service
      - ORACLE_PASSWORD=clientes123
      - RAILS_MAX_THREADS=5
      - AUDITORIA_SERVICE_URL=http://auditoria-service:3000
      - ALLOWED_ORIGINS=*
      - HTTP_READ_TIMEOUT=10
      - HTTP_OPEN_TIMEOUT=5
    # Puerto interno solamente (accesible solo desde la red Docker)
    expose:
      - "3000"
    volumes:
      - ./backend/clientes-service:/app
      - clientes_logs:/app/log
    depends_on:
      oracle-db:
        condition: service_healthy
      auditoria-service:
        condition: service_healthy
    networks:
      - factumarket-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/up"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Servicio de facturas
  facturas-service:
    build:
      context: ./backend/facturas-service
      dockerfile: Dockerfile
    container_name: factumarket-facturas-service
    environment:
      - RAILS_ENV=development
      - ORACLE_HOST=oracle-db
      - ORACLE_PORT=1521
      - ORACLE_SERVICE_NAME=XEPDB1
      - ORACLE_USERNAME=facturas_service
      - ORACLE_PASSWORD=facturas123
      - RAILS_MAX_THREADS=5
      - CLIENTES_SERVICE_URL=http://clientes-service:3000
      - AUDITORIA_SERVICE_URL=http://auditoria-service:3000
      - ALLOWED_ORIGINS=*
      - HTTP_READ_TIMEOUT=10
      - HTTP_OPEN_TIMEOUT=5
    # Puerto interno solamente (accesible solo desde la red Docker)
    expose:
      - "3000"
    volumes:
      - ./backend/facturas-service:/app
      - facturas_logs:/app/log
    depends_on:
      oracle-db:
        condition: service_healthy
      clientes-service:
        condition: service_healthy
      auditoria-service:
        condition: service_healthy
    networks:
      - factumarket-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Servicio de auditoría
  auditoria-service:
    build:
      context: ./backend/auditoria-service
      dockerfile: Dockerfile
    container_name: factumarket-auditoria-service
    environment:
      - RAILS_ENV=development
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=auditoria_development
      - RAILS_MAX_THREADS=5
      - ALLOWED_ORIGINS=*
    # Puerto interno solamente (accesible solo desde la red Docker)
    expose:
      - "3000"
    volumes:
      - ./backend/auditoria-service:/app
      - auditoria_logs:/app/log
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - factumarket-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  oracle_data:
    driver: local
  mongodb_data:
    driver: local
  clientes_logs:
    driver: local
  facturas_logs:
    driver: local
  auditoria_logs:
    driver: local
networks:
  factumarket-network:
    driver: bridge